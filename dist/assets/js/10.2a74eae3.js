(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{487:function(s,t,a){s.exports=a.p+"assets/img/image-20230801142521844.e4a210df.png"},488:function(s,t,a){s.exports=a.p+"assets/img/image-20230801142645867.f3766585.png"},489:function(s,t,a){s.exports=a.p+"assets/img/image-20230801153928025.449ff3cc.png"},490:function(s,t,a){s.exports=a.p+"assets/img/image-20230801143413468.c1d87de9.png"},491:function(s,t,a){s.exports=a.p+"assets/img/image-20230801143949139.7929dc54.png"},492:function(s,t,a){s.exports=a.p+"assets/img/aHR0cH2.0bb4897c.png"},493:function(s,t,a){s.exports=a.p+"assets/img/aHR0cH1.e1b6a354.png"},494:function(s,t,a){s.exports=a.p+"assets/img/image-20230801150849290.e49e42f9.png"},495:function(s,t,a){s.exports=a.p+"assets/img/image-20230801144841573.5886c173.png"},496:function(s,t,a){s.exports=a.p+"assets/img/image-20230801150545411.c8960358.png"},497:function(s,t,a){s.exports=a.p+"assets/img/image-20230801145205487.62b8be21.png"},498:function(s,t,a){s.exports=a.p+"assets/img/image-20230801150642656.e79ac312.png"},499:function(s,t,a){s.exports=a.p+"assets/img/image-20230801151057533.5b4fd387.png"},500:function(s,t,a){s.exports=a.p+"assets/img/image-20230801151034045.d259d59c.png"},501:function(s,t,a){s.exports=a.p+"assets/img/image-20230801153730396.95b877ec.png"},502:function(s,t,a){s.exports=a.p+"assets/img/image-20230801153705075.6bdea910.png"},503:function(s,t,a){s.exports=a.p+"assets/img/image-20230801154636141.4e65d123.png"},504:function(s,t,a){s.exports=a.p+"assets/img/image-20230801154845948.1ad1fe80.png"},505:function(s,t,a){s.exports=a.p+"assets/img/image-20230801153853817.0ddfa81c.png"},506:function(s,t,a){s.exports=a.p+"assets/img/image-20230731221514058.59f78a37.png"},507:function(s,t,a){s.exports=a.p+"assets/img/image-20230801141758944.a206d9f8.png"},508:function(s,t,a){s.exports=a.p+"assets/img/image-20230801141822203.4193387d.png"},509:function(s,t,a){s.exports=a.p+"assets/img/image-20230801141335113.f1faac96.png"},510:function(s,t,a){s.exports=a.p+"assets/img/image-20230801140656269.994e5aa6.png"},511:function(s,t,a){s.exports=a.p+"assets/img/image-20230731221450959.3f3d554b.png"},512:function(s,t,a){s.exports=a.p+"assets/img/image-20230731221622678.6c96cf6e.png"},513:function(s,t,a){s.exports=a.p+"assets/img/image-20230731221424328.01bd4c1c.png"},514:function(s,t,a){s.exports=a.p+"assets/img/image-20230801140520515.c14b8f08.png"},515:function(s,t,a){s.exports=a.p+"assets/img/image-20230731221358560.49bb0802.png"},516:function(s,t,a){s.exports=a.p+"assets/img/image-20230731221246354.a665586b.png"},517:function(s,t,a){s.exports=a.p+"assets/img/image-20230801135551296.09017880.png"},518:function(s,t,a){s.exports=a.p+"assets/img/image-20230801135835120.62f4e72a.png"},519:function(s,t,a){s.exports=a.p+"assets/img/image-20230801140353563.7eca8779.png"},520:function(s,t,a){s.exports=a.p+"assets/img/image-20230731221205769.6a8a799f.png"},521:function(s,t,a){s.exports=a.p+"assets/img/image-20230731222400768.2b3bd44a.png"},522:function(s,t,a){s.exports=a.p+"assets/img/image-20230801142021703.0f4dfdbe.png"},621:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"_2020"}},[s._v("2020")]),s._v(" "),n("h3",{attrs:{id:"顺序表和链表"}},[s._v("顺序表和链表")]),s._v(" "),n("p",[s._v("可以画图考虑，也可以考虑特殊情况")]),s._v(" "),n("img",{attrs:{src:a(487)}}),s._v(" "),n("p",[s._v("注意插入位置 i 的取值区间"),n("code",[s._v("[1, n+1]")]),s._v("，现在长度为 n，在 n+1 位置插入即为尾插，"),n("strong",[s._v("不妨只需要考虑一个特殊情况，比如尾插")]),s._v("，此时"),n("code",[s._v("i = n+1")]),s._v("，移动次数为 0，设用于偏移的未知数为 x，则有\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("mi",[s._v("n")]),n("mo",[s._v("+")]),n("mi",[s._v("x")]),n("mo",[s._v("−")]),n("mi",[s._v("i")]),n("mo",[s._v("=")]),n("mn",[s._v("0")]),n("mo",[s._v("⇒")]),n("mi",[s._v("n")]),n("mo",[s._v("+")]),n("mi",[s._v("x")]),n("mo",[s._v("−")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("n")]),n("mo",[s._v("+")]),n("mn",[s._v("1")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")]),n("mo",[s._v("=")]),n("mn",[s._v("0")]),n("mo",[s._v("⇒")]),n("mi",[s._v("x")]),n("mo",[s._v("=")]),n("mn",[s._v("1")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\nn+x-i=0\\Rightarrow n+x-(n+1)=0\\Rightarrow x=1\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("x")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6595em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("i")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),n("span",{staticClass:"mord"},[s._v("0")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("⇒")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("x")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mclose"},[s._v(")")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),n("span",{staticClass:"mord"},[s._v("0")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("⇒")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.4306em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("x")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),n("span",{staticClass:"mord"},[s._v("1")])])])])])])],1),s._v("\n故后移元素个数满足，选 C\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("mi",[s._v("n")]),n("mo",[s._v("+")]),n("mn",[s._v("1")]),n("mo",[s._v("−")]),n("mi",[s._v("i")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\nn+1-i\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6595em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("i")])])])])])])],1),s._v(" "),n("img",{attrs:{src:a(488)}})]),s._v(" "),n("p",[s._v("链栈默认无头结点（但链表默认有头结点），这里只能选 B，无论是否有头结点，A、C、D 肯定是不行")]),s._v(" "),n("p",[s._v("链表结点的删除")]),s._v(" "),n("img",{attrs:{src:a(489)}}),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LinkList"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" L"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    LinkList "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    p "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" L"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    q "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" L"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("val "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" min "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" q"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("val "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// p 是 q 的前驱，此时要删除 q")]),s._v("\n            p"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" q"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 删去边")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 删去结点")]),s._v("\n            q "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 重新将 q 指向 p 的后继结点，下一轮判定")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当不符合时，p，q 向后移动遍历")]),s._v("\n         \tp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            q "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" q"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"连通图和完全图"}},[s._v("连通图和完全图")]),s._v(" "),n("img",{attrs:{src:a(490)}}),s._v(" "),n("p",[s._v("注意措辞“确保是一个连通图”，当边个数大于顶点为 5 的完全连通图，这个顶点为 6 的无向图一定连通，但是这样边数至少为"),n("code",[s._v("(1+2+3+4)+1 = 11")]),s._v("，显然不符题意，所以题目说的是最少几条边能满足连通，故为"),n("code",[s._v("6-1 = 5")]),s._v("（感觉这吊题语文有问题）")]),s._v(" "),n("p",[s._v("对于有向图，连通的概念是“通过任一结点，都可以到达当前结点”")]),s._v(" "),n("img",{attrs:{src:a(491)}}),s._v(" "),n("p",[s._v("和完全图做一个区分")]),s._v(" "),n("ul",[n("li",[s._v("无向完全图：每个顶点之间均相连")]),s._v(" "),n("li",[s._v("有向完全图：每个顶点之间都存在方向相反的两条弧")])]),s._v(" "),n("p",[s._v("如下")]),s._v(" "),n("img",{attrs:{src:a(492)}}),s._v(" "),n("img",{attrs:{src:a(493)}}),s._v(" "),n("p",[s._v("连通图只保证能从另一结点到达当前结点，完全图一定是连通图，反之不成立")]),s._v(" "),n("img",{attrs:{src:a(494)}}),s._v(" "),n("p",[s._v("乘 2 是因为双向边，其他就是一个 n 结点连接求和\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("mn",[s._v("2")]),n("mo",[s._v("×")]),n("mo",{attrs:{stretchy:"false"}},[s._v("[")]),n("mn",[s._v("1")]),n("mo",[s._v("+")]),n("mn",[s._v("2")]),n("mo",[s._v("+")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mo",[s._v("+")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("n")]),n("mo",[s._v("−")]),n("mn",[s._v("1")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")]),n("mo",{attrs:{stretchy:"false"}},[s._v("]")]),n("mo",[s._v("=")]),n("mn",[s._v("2")]),n("mo",[s._v("×")]),n("mfrac",[n("mrow",[n("mi",[s._v("n")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("n")]),n("mo",[s._v("−")]),n("mn",[s._v("1")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),n("mn",[s._v("2")])],1),n("mo",[s._v("=")]),n("mi",[s._v("n")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("n")]),n("mo",[s._v("−")]),n("mn",[s._v("1")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\n2\\times[1+2+...+(n-1)]=2\\times\\frac{n(n-1)}{2} = n(n-1)\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("2")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mopen"},[s._v("[")]),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("2")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("...")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mclose"},[s._v(")]")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("2")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"2.113em","vertical-align":"-0.686em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mopen nulldelimiter"}),n("span",{staticClass:"mfrac"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"1.427em"}},[n("span",{staticStyle:{top:"-2.314em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord"},[s._v("2")])])]),n("span",{staticStyle:{top:"-3.23em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"frac-line",staticStyle:{"border-bottom-width":"0.04em"}})]),n("span",{staticStyle:{top:"-3.677em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mclose"},[s._v(")")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.686em"}},[n("span")])])])]),n("span",{staticClass:"mclose nulldelimiter"})]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mclose"},[s._v(")")])])])])])])],1)]),s._v(" "),n("h3",{attrs:{id:"归并排序"}},[s._v("归并排序")]),s._v(" "),n("img",{attrs:{src:a(495)}}),s._v(" "),n("p",[s._v("首先明确这个 lb 符号，就是以 2 为底的对数的意思，归并排序每次将前后顺序相邻的元素平均分组，再两两合并，对于最后多出来的一组单独处理（最后合并），有点像分段存储的最后一段，所以归并次数向上取整\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("mo",{attrs:{stretchy:"false"}},[s._v("⌈")]),n("mi",[s._v("l")]),n("mi",[s._v("b")]),n("mi",[s._v("n")]),n("mo",{attrs:{stretchy:"false"}},[s._v("⌉")]),n("mo",[s._v("=")]),n("mo",{attrs:{stretchy:"false"}},[s._v("⌈")]),n("mi",[s._v("l")]),n("mi",[s._v("o")]),n("msub",[n("mi",[s._v("g")]),n("mn",[s._v("2")])],1),n("mi",[s._v("n")]),n("mo",{attrs:{stretchy:"false"}},[s._v("⌉")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\n\\lceil lbn\\rceil = \\lceil log_2n\\rceil\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mopen"},[s._v("⌈")]),n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[s._v("l")]),n("span",{staticClass:"mord mathnormal"},[s._v("bn")]),n("span",{staticClass:"mclose"},[s._v("⌉")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mopen"},[s._v("⌈")]),n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[s._v("l")]),n("span",{staticClass:"mord mathnormal"},[s._v("o")]),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[s._v("g")]),n("span",{staticClass:"msupsub"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[n("span",{staticStyle:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mtight"},[s._v("2")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[n("span")])])])])]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mclose"},[s._v("⌉")])])])])])])],1)]),s._v(" "),n("p",[s._v("但比较次数不同")]),s._v(" "),n("img",{attrs:{src:a(496)}}),s._v(" "),n("p",[s._v("为\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("mi",[s._v("O")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("n")]),n("mi",[s._v("l")]),n("mi",[s._v("o")]),n("msub",[n("mi",[s._v("g")]),n("mn",[s._v("2")])],1),n("mi",[s._v("n")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\nO(nlog_2n)\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[s._v("l")]),n("span",{staticClass:"mord mathnormal"},[s._v("o")]),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[s._v("g")]),n("span",{staticClass:"msupsub"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.3011em"}},[n("span",{staticStyle:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mtight"},[s._v("2")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[n("span")])])])])]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mclose"},[s._v(")")])])])])])])],1),s._v("\n注意区分归并次数和比较次数")]),s._v(" "),n("h3",{attrs:{id:"判断和填空题"}},[s._v("判断和填空题")]),s._v(" "),n("p",[n("code",[s._v("√、√")])]),s._v(" "),n("img",{attrs:{src:a(497)}}),s._v(" "),n("p",[s._v("对第四题不考虑结点无孩子的情况，笼统上说，后序遍历特性确实如此；第五题举例吧，应该是对的")]),s._v(" "),n("img",{attrs:{src:a(498)}}),s._v(" "),n("p",[s._v("第四题明明只有两个 pop，所以我只写了 bc，但由于 5 次 push，顺序已经确定，所以要填上完整的序列 bceda")]),s._v(" "),n("p",[s._v("第五题，字符串相等的充要条件：长度相等且对应位置字符相等")]),s._v(" "),n("h3",{attrs:{id:"散列表平均查找长度"}},[s._v("散列表平均查找长度")]),s._v(" "),n("img",{attrs:{src:a(499)}}),s._v(" "),n("p",[n("strong",[s._v("等概率取值")]),s._v("是散列函数的性质")]),s._v(" "),n("img",{attrs:{src:a(500)}}),s._v(" "),n("p",[s._v("画出散列表后对每个元素的查找成功的比较次数求和，共十个元素，所以成功的平均查找长度要除以 10，得平均查找长度")]),s._v(" "),n("h3",{attrs:{id:"邻接矩阵和邻接表"}},[s._v("邻接矩阵和邻接表")]),s._v(" "),n("img",{attrs:{src:a(501)}}),s._v(" "),n("img",{attrs:{src:a(502)}}),s._v(" "),n("p",[s._v("邻接表用一个一分为二的长方形来表示，前半部表示顶点，后半部表示指针")]),s._v(" "),n("p",[s._v("通过深度优先搜索邻接表判定图中路径的存在性")]),s._v(" "),n("img",{attrs:{src:a(503)}}),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("N")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")])])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" adjvex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("node")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("edgenode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    chat vertex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    edgenode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("link"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("vexnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("N"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("exist_path_DFS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vexnode ga"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以邻接表为存储结构，判断 vi 和 vj 之间是否存在路径，有返回1，否则返回0")]),s._v("\n    edgenode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("________"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 标记 vi 已被访问")]),s._v("\n        ________"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 访问 vi 的第一个邻接点")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("________"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 依次访问 vi 的邻接点")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("________"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("________"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vi的邻接点若未被访问且该邻接点到vj存在路径")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            p "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("img",{attrs:{src:a(504)}}),s._v(" "),n("h3",{attrs:{id:"背包问题"}},[s._v("背包问题")]),s._v(" "),n("p",[s._v("就是一个贪婪算法：始终先装满"),n("strong",[s._v("性价比高")]),s._v("的物品")]),s._v(" "),n("img",{attrs:{src:a(505)}}),s._v(" "),n("h2",{attrs:{id:"_2021"}},[s._v("2021")]),s._v(" "),n("h3",{attrs:{id:"概念和判断题"}},[s._v("概念和判断题")]),s._v(" "),n("p",[s._v("算法的时间复杂度和"),n("strong",[s._v("问题规模")]),s._v("有关，而与执行程序的质量无关")]),s._v(" "),n("img",{attrs:{src:a(506)}}),s._v(" "),n("p",[n("code",[s._v("X、X、X、√")])]),s._v(" "),n("img",{attrs:{src:a(507)}}),s._v(" "),n("img",{attrs:{src:a(508)}}),s._v(" "),n("h3",{attrs:{id:"数组和串匹配"}},[s._v("数组和串匹配")]),s._v(" "),n("img",{attrs:{src:a(509)}}),s._v(" "),n("p",[s._v("这种表示"),n("code",[s._v("A[1...5, 1...6]")]),s._v("是指一个 5 行 6 列的二维数组，A55 即为第五行第五列的元素，故地址为\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("mn",[s._v("1000")]),n("mo",[s._v("+")]),n("mn",[s._v("5")]),n("mo",[s._v("×")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mn",[s._v("4")]),n("mo",[s._v("×")]),n("mn",[s._v("6")]),n("mo",[s._v("+")]),n("mn",[s._v("4")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")]),n("mo",[s._v("=")]),n("mn",[s._v("1140")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\n1000+5\\times(4\\times6+4)=1140\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("1000")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("5")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord"},[s._v("4")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("6")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mord"},[s._v("4")]),n("span",{staticClass:"mclose"},[s._v(")")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),n("span",{staticClass:"mord"},[s._v("1140")])])])])])])],1),s._v("\n其中 1000 为数组起始位置，5 为每个元素长度，4x6 为前四行元素个数，4 为第五行前四个元素，初始地址加元素单位长度乘以元素个数，得到 A55 起始地址")]),s._v(" "),n("img",{attrs:{src:a(510)}}),s._v(" "),n("p",[s._v("第 k 次匹配成功指的是子串匹配完全时外层循环 i 的取值，或者说，是主串中指针所指的头部位置，显然这地第 6 个元素往后四个匹配上了子串，故外层循环为第 6 次，即第 6 次将匹配成功")]),s._v(" "),n("h3",{attrs:{id:"链表增删和队列"}},[s._v("链表增删和队列")]),s._v(" "),n("p",[s._v("单链表删除节点操作：将后继前移删除当前结点")]),s._v(" "),n("img",{attrs:{src:a(511)}}),s._v(" "),n("p",[s._v("单链表的原地反转（951 默认带头结点）")]),s._v(" "),n("img",{attrs:{src:a(512)}}),s._v(" "),n("p",[s._v("我默认这个链表没带头结点，代码为")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1. p = L->next\n2. p != NULL\n3. p->next = L\n4. L = p\n5. p = q\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("但是题目默认有头结点，于是代码为，头结点始终为 L，始终用 L->next 指向当前结点的前驱")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1. p = L->next\n2. p != NULL\n3. p->next = L->next\n4. L->next = p\n5. p = q\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("画图示例一下，一定要注意要先把 p（当前结点）保存到 L 中（作为下一次操作的前驱），再把 p 置为后继 q")]),s._v(" "),n("p",[s._v("循环队列元素个数判定：这里是否要考虑指针指向空还是元素的问题？"),n("code",[s._v("50 - (13-5) = 42")])]),s._v(" "),n("img",{attrs:{src:a(513)}}),s._v(" "),n("p",[s._v("注意区分队头和头指针的区别，队头指的是入队时元素追加的位置，而头指针就是指链表的头部")]),s._v(" "),n("img",{attrs:{src:a(514)}}),s._v(" "),n("h3",{attrs:{id:"完全二叉树、哈夫曼树、有向图的邻接表和邻接矩阵"}},[s._v("完全二叉树、哈夫曼树、有向图的邻接表和邻接矩阵")]),s._v(" "),n("p",[s._v("完全二叉树结点最多最少个数计算")]),s._v(" "),n("img",{attrs:{src:a(515)}}),s._v(" "),n("p",[s._v("第六层有 9 个叶子结点有两种可能性，分别对应了结点数最多和最少的两种情况")]),s._v(" "),n("ul",[n("li",[s._v("铺满左侧，右侧有 9 个叶子结点")]),s._v(" "),n("li",[s._v("左侧有 9 个叶子结点，右侧全为空")])]),s._v(" "),n("p",[s._v("邻接表查找入度的时间复杂度：就是遍历每一个结点和每一条边，共 N+E 次")]),s._v(" "),n("img",{attrs:{src:a(516)}}),s._v(" "),n("p",[s._v("哈夫曼树及其编码数量的判断：哈夫曼树想要无限延展，除了根节点每层只能有两个结点，码字数量即为叶子结点的数量，在这样的排布下，将会有"),n("code",[s._v("(215-1) / 2 + 1")]),s._v("个叶子结点（减去的 1 是根节点，除以二是求层数，每层一个叶子结点，加上的 1 是最后一层多的一个叶子结点）")]),s._v(" "),n("img",{attrs:{src:a(517)}}),s._v(" "),n("p",[s._v("有向图的最大边数")]),s._v(" "),n("img",{attrs:{src:a(518)}}),s._v(" "),n("p",[s._v("n 个结点，有"),n("code",[s._v("(n-1)+(n-2)+...+1")]),s._v("种连接方式，每种连接可以是双向，故有向边条数最多为\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("mn",[s._v("2")]),n("mo",[s._v("×")]),n("mo",{attrs:{stretchy:"false"}},[s._v("[")]),n("mn",[s._v("1")]),n("mo",[s._v("+")]),n("mn",[s._v("2")]),n("mo",[s._v("+")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mo",[s._v("+")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("n")]),n("mo",[s._v("−")]),n("mn",[s._v("1")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")]),n("mo",{attrs:{stretchy:"false"}},[s._v("]")]),n("mo",[s._v("=")]),n("mn",[s._v("2")]),n("mo",[s._v("×")]),n("mfrac",[n("mrow",[n("mi",[s._v("n")]),n("mo",[s._v("×")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("n")]),n("mo",[s._v("−")]),n("mn",[s._v("1")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),n("mn",[s._v("2")])],1),n("mo",[s._v("=")]),n("mi",[s._v("n")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("n")]),n("mo",[s._v("−")]),n("mn",[s._v("1")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\n2\\times[1+2+...+(n-1)]=2\\times\\frac{n\\times(n-1)}{2}=n(n-1)\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("2")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mopen"},[s._v("[")]),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("2")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("...")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mclose"},[s._v(")]")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{staticClass:"mord"},[s._v("2")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"2.113em","vertical-align":"-0.686em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mopen nulldelimiter"}),n("span",{staticClass:"mfrac"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"1.427em"}},[n("span",{staticStyle:{top:"-2.314em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord"},[s._v("2")])])]),n("span",{staticStyle:{top:"-3.23em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"frac-line",staticStyle:{"border-bottom-width":"0.04em"}})]),n("span",{staticStyle:{top:"-3.677em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mclose"},[s._v(")")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.686em"}},[n("span")])])])]),n("span",{staticClass:"mclose nulldelimiter"})]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mclose"},[s._v(")")])])])])])])],1),s._v(" "),n("img",{attrs:{src:a(519)}})]),s._v(" "),n("p",[s._v("共 n^2 个空位，减去有值的 e 条边，得零元素个数，注意有向图的邻接矩阵对角线一定为 0")]),s._v(" "),n("h3",{attrs:{id:"快排和散列表平均查找长度"}},[s._v("快排和散列表平均查找长度")]),s._v(" "),n("p",[s._v("快速排序过程考察")]),s._v(" "),n("img",{attrs:{src:a(520)}}),s._v(" "),n("p",[s._v("散列表的平均查找长度计算（成功和不成功）")]),s._v(" "),n("img",{attrs:{src:a(521)}}),s._v(" "),n("ul",[n("li",[s._v("成功的平均查找长度 ASL 为各个元素查找成功所需次数之和除以实际元素个数")]),s._v(" "),n("li",[s._v("查找失败的平均查找长度 ASL 为各个余数确定其查找失败所需比较次数之和除以模运算完全剩余系元素个数")])]),s._v(" "),n("p",[s._v("比如这里模 13，那么查找不成功的平均查找长度就要遍历余数为"),n("code",[s._v("0,1,...,12")]),s._v("的共十三个空格，最后取平均；而元素个数为 12，平均查找成功长度则要除以 12")]),s._v(" "),n("img",{attrs:{src:a(522)}}),s._v(" "),n("p",[s._v("求模运算一定要细心，另外查找失败的比较次数"),n("strong",[s._v("要加上最后判定为空的一次比较")]),s._v("，比如 x 模 13 得 11，则确定其查找失败要先比较第 11、12 位置的元素值，发现不吻合，于是比较第 0 位置的元素，发现为空，故确定 x 不存在共需比较 3 次")])])}),[],!1,null,null,null);t.default=e.exports}}]);